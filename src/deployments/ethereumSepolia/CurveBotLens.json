{
  "address": "0xB199c3A2dbF914a09579D5b4c5A745E31cA67564",
  "abi": [
    {
      "inputs": [],
      "name": "DS_MATH_ADD_OVERFLOW",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "DS_MATH_MUL_OVERFLOW",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "contract ICurvePool",
          "name": "_pool",
          "type": "address"
        },
        {
          "internalType": "uint256[3]",
          "name": "_amounts",
          "type": "uint256[3]"
        }
      ],
      "name": "removeAndSetLiquidity",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "transactionHash": "0x702f39de1efe4b936c58977b69f8d68c49276e634f4db4d5e726d89c9f274b18",
  "receipt": {
    "to": null,
    "from": "0x936b14f9eF89f263E775241C394583D5d419c2D2",
    "contractAddress": "0xB199c3A2dbF914a09579D5b4c5A745E31cA67564",
    "transactionIndex": 14,
    "gasUsed": "680448",
    "logsBloom": "0x
    "blockHash": "0x4dcebaa5c5df88a9f02eceac9566f0e0e17f6acb4bd3b6f629b771ca2de0231b",
    "transactionHash": "0x702f39de1efe4b936c58977b69f8d68c49276e634f4db4d5e726d89c9f274b18",
    "logs": [],
    "blockNumber": 4763458,
    "cumulativeGasUsed": "2311278",
    "status": 1,
    "byzantium": true
  },
  "args": [],
  "numDeployments": 1,
  "solcInputHash": "ac08d1652288d4d03be56436412dd0c4",
  "metadata": "{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"DS_MATH_ADD_OVERFLOW\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"DS_MATH_MUL_OVERFLOW\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"contract ICurvePool\",\"name\":\"_pool\",\"type\":\"address\"},{\"internalType\":\"uint256[3]\",\"name\":\"_amounts\",\"type\":\"uint256[3]\"}],\"name\":\"removeAndSetLiquidity\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/TestnetServices/CurveBotLens.sol\":\"CurveBotLens\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (token/ERC20/IERC20.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Interface of the ERC20 standard as defined in the EIP.\\n */\\ninterface IERC20 {\\n    /**\\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\\n     * another (`to`).\\n     *\\n     * Note that `value` may be zero.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\n\\n    /**\\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\\n     * a call to {approve}. `value` is the new allowance.\\n     */\\n    event Approval(address indexed owner, address indexed spender, uint256 value);\\n\\n    /**\\n     * @dev Returns the amount of tokens in existence.\\n     */\\n    function totalSupply() external view returns (uint256);\\n\\n    /**\\n     * @dev Returns the amount of tokens owned by `account`.\\n     */\\n    function balanceOf(address account) external view returns (uint256);\\n\\n    /**\\n     * @dev Moves `amount` tokens from the caller's account to `to`.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transfer(address to, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Returns the remaining number of tokens that `spender` will be\\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\\n     * zero by default.\\n     *\\n     * This value changes when {approve} or {transferFrom} are called.\\n     */\\n    function allowance(address owner, address spender) external view returns (uint256);\\n\\n    /**\\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\\n     * that someone may use both the old and the new allowance by unfortunate\\n     * transaction ordering. One possible solution to mitigate this race\\n     * condition is to first reduce the spender's allowance to 0 and set the\\n     * desired value afterwards:\\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address spender, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Moves `amount` tokens from `from` to `to` using the\\n     * allowance mechanism. `amount` is then deducted from the caller's\\n     * allowance.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(address from, address to, uint256 amount) external returns (bool);\\n}\\n\",\"keccak256\":\"0x287b55befed2961a7eabd7d7b1b2839cbca8a5b80ef8dcbb25ed3d4c2002c305\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (token/ERC20/extensions/IERC20Metadata.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../IERC20.sol\\\";\\n\\n/**\\n * @dev Interface for the optional metadata functions from the ERC20 standard.\\n *\\n * _Available since v4.1._\\n */\\ninterface IERC20Metadata is IERC20 {\\n    /**\\n     * @dev Returns the name of the token.\\n     */\\n    function name() external view returns (string memory);\\n\\n    /**\\n     * @dev Returns the symbol of the token.\\n     */\\n    function symbol() external view returns (string memory);\\n\\n    /**\\n     * @dev Returns the decimals places of the token.\\n     */\\n    function decimals() external view returns (uint8);\\n}\\n\",\"keccak256\":\"0x8de418a5503946cabe331f35fe242d3201a73f67f77aaeb7110acb1f30423aca\",\"license\":\"MIT\"},\"contracts/TestnetServices/CurveBotLens.sol\":{\"content\":\"// (c) 2023 Primex.finance\\n// SPDX-License-Identifier: BUSL-1.1\\npragma solidity 0.8.18;\\n\\nimport {IERC20} from \\\"@openzeppelin/contracts/token/ERC20/IERC20.sol\\\";\\nimport {IERC20Metadata} from \\\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\\\";\\nimport {WadRayMath} from \\\"../libraries/utils/WadRayMath.sol\\\";\\n\\nimport {ICurvePool} from \\\"../interfaces/routers/ICurvePool.sol\\\";\\nimport {ICurveBotLens} from \\\"./interfaces/ICurveBotLens.sol\\\";\\n\\ncontract CurveBotLens is ICurveBotLens {\\n    using WadRayMath for uint256;\\n\\n    function removeAndSetLiquidity(ICurvePool _pool, uint256[3] memory _amounts) external override {\\n        IERC20 lpToken = IERC20(_pool.token());\\n        // remove all liquidity of msg.sender\\n        uint256 lpTokenBalance = lpToken.balanceOf(msg.sender);\\n        if (lpTokenBalance > 0) {\\n            uint256 toRemove = lpToken.totalSupply() == lpTokenBalance ? lpTokenBalance - 1 : lpTokenBalance;\\n            if (toRemove > 0) {\\n                lpToken.transferFrom(msg.sender, address(this), toRemove);\\n                lpToken.approve(address(_pool), toRemove);\\n                uint256[3] memory minAmounts;\\n                _pool.remove_liquidity(toRemove, minAmounts);\\n            }\\n        }\\n\\n        // increase amounts if some of the balances is higher than requested amount\\n        ///HACK: can increase amounts and exceed approved or available balance of msg.sender\\n        uint256 increaseAssets = WadRayMath.WAD;\\n        for (uint256 i; i < 3; i++) {\\n            uint256 poolBalance = _pool.balances(i);\\n            if (poolBalance > _amounts[i]) {\\n                ///HACK: can overflow if requested amount is too low\\n                uint256 increaseThisAsset = poolBalance.wdiv(_amounts[i]);\\n                if (increaseThisAsset > increaseAssets) {\\n                    increaseAssets = increaseThisAsset;\\n                }\\n            }\\n        }\\n\\n        for (uint256 i; i < 3; i++) {\\n            IERC20 asset = IERC20(_pool.coins(i));\\n            uint256 poolBalance = _pool.balances(i);\\n            uint256 lensBalance = asset.balanceOf(address(this));\\n            if (increaseAssets > WadRayMath.WAD) {\\n                _amounts[i] = _amounts[i].wmul(increaseAssets);\\n            }\\n\\n            _amounts[i] = _amounts[i] - poolBalance;\\n            if (lensBalance < _amounts[i]) {\\n                asset.transferFrom(msg.sender, address(this), _amounts[i] - lensBalance);\\n            }\\n            asset.approve(address(_pool), _amounts[i]);\\n        }\\n\\n        _pool.add_liquidity(_amounts, 0);\\n\\n        // return assets and lp tokens to user\\n        lpToken.transfer(msg.sender, lpToken.balanceOf(address(this)));\\n        for (uint256 i; i < 3; i++) {\\n            IERC20 asset = IERC20(_pool.coins(i));\\n            asset.transfer(msg.sender, asset.balanceOf(address(this)));\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x155403ac68b803561bff766a55726e97b0d9fbd58153aeb84087344edac23481\",\"license\":\"BUSL-1.1\"},\"contracts/TestnetServices/interfaces/ICurveBotLens.sol\":{\"content\":\"// (c) 2023 Primex.finance\\n// SPDX-License-Identifier: BUSL-1.1\\npragma solidity ^0.8.18;\\n\\nimport {ICurvePool} from \\\"../../interfaces/routers/ICurvePool.sol\\\";\\n\\ninterface ICurveBotLens {\\n    function removeAndSetLiquidity(ICurvePool _pool, uint256[3] memory _amounts) external;\\n}\\n\",\"keccak256\":\"0x75f6910869061b1f624153af49df332ffa8c2b558668d510b248dfa3d5d63611\",\"license\":\"BUSL-1.1\"},\"contracts/interfaces/routers/ICurvePool.sol\":{\"content\":\"// (c) 2023 Primex.finance\\n// SPDX-License-Identifier: BUSL-1.1\\npragma solidity ^0.8.18;\\n\\ninterface ICurvePool {\\n    // solhint-disable func-name-mixedcase\\n    // solhint-disable var-name-mixedcase\\n    function add_liquidity(uint256[3] memory amounts, uint256 min_mint_amount) external;\\n\\n    function remove_liquidity(uint256 _amount, uint256[3] memory min_amounts) external;\\n\\n    function A() external view returns (uint256);\\n\\n    function token() external view returns (address);\\n\\n    function fee() external view returns (uint256);\\n\\n    function balances(uint256 _i) external view returns (uint256);\\n\\n    function coins(uint256 _i) external view returns (address);\\n\\n    function get_dy(int128 i, int128 j, uint256 dx) external view returns (uint256);\\n}\\n\",\"keccak256\":\"0x7fab676a9f2e523daa1281c6e02f015c4a337a4c0f4c65e167eb9f715e1a49f5\",\"license\":\"BUSL-1.1\"},\"contracts/libraries/utils/WadRayMath.sol\":{\"content\":\"// SPDX-License-Identifier: GPL-3.0\\n\\n// A modified version of ds-math library\\n// Origin: https://github.com/dapphub/ds-math/blob/master/src/math.sol\\n// Unused methods were removed, errors changed\\n\\npragma solidity 0.8.18;\\nerror DS_MATH_ADD_OVERFLOW();\\nerror DS_MATH_MUL_OVERFLOW();\\n\\nlibrary WadRayMath {\\n    function add(uint256 x, uint256 y) internal pure returns (uint256 z) {\\n        if ((z = x + y) < x) revert DS_MATH_ADD_OVERFLOW();\\n    }\\n\\n    function mul(uint256 x, uint256 y) internal pure returns (uint256 z) {\\n        if (!(y == 0 || (z = x * y) / y == x)) revert DS_MATH_MUL_OVERFLOW();\\n    }\\n\\n    uint256 internal constant WAD = 10 ** 18;\\n    uint256 internal constant RAY = 10 ** 27;\\n\\n    //rounds to zero if x*y < WAD / 2\\n    function wmul(uint256 x, uint256 y) internal pure returns (uint256 z) {\\n        z = add(mul(x, y), WAD / 2) / WAD;\\n    }\\n\\n    //rounds to zero if x*y < RAY / 2\\n    function rmul(uint256 x, uint256 y) internal pure returns (uint256 z) {\\n        z = add(mul(x, y), RAY / 2) / RAY;\\n    }\\n\\n    //rounds to zero if x*y < WAD / 2\\n    function wdiv(uint256 x, uint256 y) internal pure returns (uint256 z) {\\n        z = add(mul(x, WAD), y / 2) / y;\\n    }\\n\\n    //rounds to zero if x*y < RAY / 2\\n    function rdiv(uint256 x, uint256 y) internal pure returns (uint256 z) {\\n        z = add(mul(x, RAY), y / 2) / y;\\n    }\\n}\\n\",\"keccak256\":\"0xb0991b2c77df3496e4595618675a4279bd187aa4968bfbcf3be47f80c49280b3\",\"license\":\"GPL-3.0\"}},\"version\":1}",
  "bytecode": "0x6080806040523461001657610b56908161001c8239f35b600080fdfe6080604081815260048036101561001557600080fd5b600092833560e01c634f826c8a1461002c57600080fd5b346109dc5760803660031901126109dc576001600160a01b038235818116949193908590036109d85736604312156109d85761006783610a0a565b60849083368311610349576024905b8382106109c85750508251637e062a3560e11b815260209590868184818b5afa9081156102fc579082918a916109ab575b5016948451936370a0823160e01b94858152338582015288816024818b5afa9081156102a8578b9161097a575b50806107d1575b50908991670de0b6b3a7640000835b600381106106a35750835b6003811061035b575050893b15610357578651634515cef360e01b815291839183916101249088840190610aa2565b82606483015281838d5af1801561034d57610335575b505083519483865230838701528686602481845afa9586156102fc578996610306575b50845163a9059cbb60e01b808252338583019081526020810198909852969091889183919082908d90829060400103925af180156102fc576102df575b50875b600381106101a9578880f35b845163c661065760e01b815283810182905287816024818c5afa908115610268579083918b916102b2575b5016855185815230858201528881602481855afa9081156102a8579089918c91610272575b50875189815233878201908152602081019290925292839182908e9082906040015b03925af180156102685790610236929161023b575b50610aca565b61019d565b61025a90893d8b11610261575b6102528183610a26565b810190610a8a565b5038610230565b503d610248565b86513d8c823e3d90fd5b82819392503d83116102a1575b6102898183610a26565b8101031261029c5751889061021b6101f9565b600080fd5b503d61027f565b87513d8d823e3d90fd5b6102d29150893d8b116102d8575b6102ca8183610a26565b810190610a48565b386101d4565b503d6102c0565b6102f590873d8911610261576102528183610a26565b503861019a565b85513d8b823e3d90fd5b9095508681813d831161032e575b61031e8183610a26565b8101031261029c5751943861015d565b503d610314565b61033e906109e0565b61034957873861013a565b8780fd5b86513d84823e3d90fd5b8280fd5b60248b8d8b519283809263c661065760e01b8252868d8301525afa90811561049d578c838f928b8b8f966024938d91610686575b501695519485938492634903b0d160e01b84528301525afa908115610529578791610655575b508a51908a8252308a8301528d82602481865afa91821561064b578f90928f93928e938b92610612575b50670de0b6b3a76400008811610533575b610404906103fe888c610ad9565b51610a67565b61040e878b610ad9565b52610419868a610ad9565b5181106104a7575b509261046893898c610433888c610ad9565b51945163095ea7b360e01b81526001600160a01b03909316908301908152602081019490945290948593849291839160400190565b03925af1801561049d579061048292916104875750610aca565b6100f5565b61025a908d803d10610261576102528183610a26565b8a513d88823e3d90fd5b6104ea9392506104bc91506103fe868a610ad9565b8c516323b872dd60e01b8152338c820190815230602082015260408101929092529283918291606090910190565b03818a865af1801561052957610468928f8f938e9361050c575b509093610421565b61052290853d8711610261576102528183610a26565b5038610504565b8b513d89823e3d90fd5b9350939495969780995061054a9250869150610ad9565b5160009086159081156105da575b50156105ca576706f05b59d3b200008101908181116105b55781106105a5578f9796959493928f908f93610404908f94670de0b6b3a7640000900461059d898d610ad9565b5290506103f0565b8b51630a77254f60e01b81528a90fd5b60118b634e487b7160e01b6000525260246000fd5b8b51631550e8b760e01b81528a90fd5b9050868102918183048814821517156105ff57506105f88783610b00565b1438610558565b634e487b7160e01b815260118c52602490fd5b9493509950505081813d8311610644575b61062d8183610a26565b8101031261029c578a8f978f908f935190386103df565b503d610623565b8c513d8a823e3d90fd5b8097508d8092503d831161067f575b61066e8183610a26565b8101031261029c578d9551386103b5565b503d610664565b61069d9150863d88116102d8576102ca8183610a26565b3861038f565b909192935060248a8c8a5192838092634903b0d160e01b8252868c8301525afa9081156107c7578d9161079a575b506106dc8286610ad9565b5181116106f8575b506106ee90610aca565b908b9392916100ea565b6107028286610ad9565b5190670de0b6b3a7640000810290808204670de0b6b3a7640000148115171561077557670de0b6b3a764000082040361078a578160011c810190818111610775578110610765579061075391610b00565b828111156106e45791506106ee6106e4565b8951630a77254f60e01b81528890fd5b601189634e487b7160e01b6000525260246000fd5b8951631550e8b760e01b81528890fd5b90508a81813d83116107c0575b6107b18183610a26565b8101031261029c5751386106d1565b503d6107a7565b89513d8f823e3d90fd5b86516318160ddd60e01b8152898187818c5afa908115610906579082918d91610945575b500361094057600019810190811161092d575b80156100db5786516323b872dd60e01b815233868201908152306020820152604081018390528a908290819003606001818f8d5af1801561090657610910575b50865163095ea7b360e01b81526001600160a01b038b16868201908152602081018390528a908290819003604001818f8d5af18015610906576108e9575b508a875161089381610a0a565b60603682378b3b156108e557836108c593838e8c51968795869463ecb586a560e01b86528d8601526024850190610aa2565b5af180156102a857156100db576108de909a919a6109e0565b98386100db565b5080fd5b6108ff908a3d8c11610261576102528183610a26565b5038610886565b88513d8e823e3d90fd5b610926908a3d8c11610261576102528183610a26565b5038610848565b634e487b7160e01b8b526011855260248bfd5b610808565b8092508b8092503d8311610973575b61095e8183610a26565b8101031261096f57819051386107f5565b8b80fd5b503d610954565b90508881813d83116109a4575b6109918183610a26565b810103126109a05751386100d4565b8a80fd5b503d610987565b6109c29150883d8a116102d8576102ca8183610a26565b386100a7565b8135815260209182019101610076565b8580fd5b8380fd5b67ffffffffffffffff81116109f457604052565b634e487b7160e01b600052604160045260246000fd5b6060810190811067ffffffffffffffff8211176109f457604052565b90601f8019910116810190811067ffffffffffffffff8211176109f457604052565b9081602091031261029c57516001600160a01b038116810361029c5790565b91908203918211610a7457565b634e487b7160e01b600052601160045260246000fd5b9081602091031261029c5751801515810361029c5790565b6000915b60038310610ab357505050565b600190825181526020809101920192019190610aa6565b6000198114610a745760010190565b906003811015610aea5760051b0190565b634e487b7160e01b600052603260045260246000fd5b8115610b0a570490565b634e487b7160e01b600052601260045260246000fdfea2646970667358221220b3ef75423ca246325d345fd237ebe80091cc1ef8356f1c5b59250e914e5fe91c64736f6c63430008120033",
  "deployedBytecode": "0x6080604081815260048036101561001557600080fd5b600092833560e01c634f826c8a1461002c57600080fd5b346109dc5760803660031901126109dc576001600160a01b038235818116949193908590036109d85736604312156109d85761006783610a0a565b60849083368311610349576024905b8382106109c85750508251637e062a3560e11b815260209590868184818b5afa9081156102fc579082918a916109ab575b5016948451936370a0823160e01b94858152338582015288816024818b5afa9081156102a8578b9161097a575b50806107d1575b50908991670de0b6b3a7640000835b600381106106a35750835b6003811061035b575050893b15610357578651634515cef360e01b815291839183916101249088840190610aa2565b82606483015281838d5af1801561034d57610335575b505083519483865230838701528686602481845afa9586156102fc578996610306575b50845163a9059cbb60e01b808252338583019081526020810198909852969091889183919082908d90829060400103925af180156102fc576102df575b50875b600381106101a9578880f35b845163c661065760e01b815283810182905287816024818c5afa908115610268579083918b916102b2575b5016855185815230858201528881602481855afa9081156102a8579089918c91610272575b50875189815233878201908152602081019290925292839182908e9082906040015b03925af180156102685790610236929161023b575b50610aca565b61019d565b61025a90893d8b11610261575b6102528183610a26565b810190610a8a565b5038610230565b503d610248565b86513d8c823e3d90fd5b82819392503d83116102a1575b6102898183610a26565b8101031261029c5751889061021b6101f9565b600080fd5b503d61027f565b87513d8d823e3d90fd5b6102d29150893d8b116102d8575b6102ca8183610a26565b810190610a48565b386101d4565b503d6102c0565b6102f590873d8911610261576102528183610a26565b503861019a565b85513d8b823e3d90fd5b9095508681813d831161032e575b61031e8183610a26565b8101031261029c5751943861015d565b503d610314565b61033e906109e0565b61034957873861013a565b8780fd5b86513d84823e3d90fd5b8280fd5b60248b8d8b519283809263c661065760e01b8252868d8301525afa90811561049d578c838f928b8b8f966024938d91610686575b501695519485938492634903b0d160e01b84528301525afa908115610529578791610655575b508a51908a8252308a8301528d82602481865afa91821561064b578f90928f93928e938b92610612575b50670de0b6b3a76400008811610533575b610404906103fe888c610ad9565b51610a67565b61040e878b610ad9565b52610419868a610ad9565b5181106104a7575b509261046893898c610433888c610ad9565b51945163095ea7b360e01b81526001600160a01b03909316908301908152602081019490945290948593849291839160400190565b03925af1801561049d579061048292916104875750610aca565b6100f5565b61025a908d803d10610261576102528183610a26565b8a513d88823e3d90fd5b6104ea9392506104bc91506103fe868a610ad9565b8c516323b872dd60e01b8152338c820190815230602082015260408101929092529283918291606090910190565b03818a865af1801561052957610468928f8f938e9361050c575b509093610421565b61052290853d8711610261576102528183610a26565b5038610504565b8b513d89823e3d90fd5b9350939495969780995061054a9250869150610ad9565b5160009086159081156105da575b50156105ca576706f05b59d3b200008101908181116105b55781106105a5578f9796959493928f908f93610404908f94670de0b6b3a7640000900461059d898d610ad9565b5290506103f0565b8b51630a77254f60e01b81528a90fd5b60118b634e487b7160e01b6000525260246000fd5b8b51631550e8b760e01b81528a90fd5b9050868102918183048814821517156105ff57506105f88783610b00565b1438610558565b634e487b7160e01b815260118c52602490fd5b9493509950505081813d8311610644575b61062d8183610a26565b8101031261029c578a8f978f908f935190386103df565b503d610623565b8c513d8a823e3d90fd5b8097508d8092503d831161067f575b61066e8183610a26565b8101031261029c578d9551386103b5565b503d610664565b61069d9150863d88116102d8576102ca8183610a26565b3861038f565b909192935060248a8c8a5192838092634903b0d160e01b8252868c8301525afa9081156107c7578d9161079a575b506106dc8286610ad9565b5181116106f8575b506106ee90610aca565b908b9392916100ea565b6107028286610ad9565b5190670de0b6b3a7640000810290808204670de0b6b3a7640000148115171561077557670de0b6b3a764000082040361078a578160011c810190818111610775578110610765579061075391610b00565b828111156106e45791506106ee6106e4565b8951630a77254f60e01b81528890fd5b601189634e487b7160e01b6000525260246000fd5b8951631550e8b760e01b81528890fd5b90508a81813d83116107c0575b6107b18183610a26565b8101031261029c5751386106d1565b503d6107a7565b89513d8f823e3d90fd5b86516318160ddd60e01b8152898187818c5afa908115610906579082918d91610945575b500361094057600019810190811161092d575b80156100db5786516323b872dd60e01b815233868201908152306020820152604081018390528a908290819003606001818f8d5af1801561090657610910575b50865163095ea7b360e01b81526001600160a01b038b16868201908152602081018390528a908290819003604001818f8d5af18015610906576108e9575b508a875161089381610a0a565b60603682378b3b156108e557836108c593838e8c51968795869463ecb586a560e01b86528d8601526024850190610aa2565b5af180156102a857156100db576108de909a919a6109e0565b98386100db565b5080fd5b6108ff908a3d8c11610261576102528183610a26565b5038610886565b88513d8e823e3d90fd5b610926908a3d8c11610261576102528183610a26565b5038610848565b634e487b7160e01b8b526011855260248bfd5b610808565b8092508b8092503d8311610973575b61095e8183610a26565b8101031261096f57819051386107f5565b8b80fd5b503d610954565b90508881813d83116109a4575b6109918183610a26565b810103126109a05751386100d4565b8a80fd5b503d610987565b6109c29150883d8a116102d8576102ca8183610a26565b386100a7565b8135815260209182019101610076565b8580fd5b8380fd5b67ffffffffffffffff81116109f457604052565b634e487b7160e01b600052604160045260246000fd5b6060810190811067ffffffffffffffff8211176109f457604052565b90601f8019910116810190811067ffffffffffffffff8211176109f457604052565b9081602091031261029c57516001600160a01b038116810361029c5790565b91908203918211610a7457565b634e487b7160e01b600052601160045260246000fd5b9081602091031261029c5751801515810361029c5790565b6000915b60038310610ab357505050565b600190825181526020809101920192019190610aa6565b6000198114610a745760010190565b906003811015610aea5760051b0190565b634e487b7160e01b600052603260045260246000fd5b8115610b0a570490565b634e487b7160e01b600052601260045260246000fdfea2646970667358221220b3ef75423ca246325d345fd237ebe80091cc1ef8356f1c5b59250e914e5fe91c64736f6c63430008120033",
  "devdoc": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  },
  "storageLayout": {
    "storage": [],
    "types": null
  }
}
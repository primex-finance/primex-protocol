corpusDir: 'corpus' # save the corpus in this directory 
initialize: 'contracts/test/init.json'  # use this init.json to seed
testMode: assertion # this is the mode we'll often run it in
testLimit: 50000 # by default this is 50000, however for writing properties, we may choose to lower it 
shrinkLimit: 500 # this will determine the total number of times to shrink the code
stopOnFail: true
testMaxGas: 800003000
timeout: 3600 # 1 hour
codeSize: 0xfffffffffff # maximize code size
workers: 4
contractAddr: "0x00a329c0648769a73afac7f9381e08fb43dbea72" #Description: Address to deploy the contract to test.
# solcArgs: "--optimize --via-ir"
balanceContract: 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
deployContracts: [["0x1f", "LimitOrderLibrary"], ["0x2f", "PrimexPricingLibrary"], ["0x3f", "PositionLibrary"],["0x4f", "TokenTransfersLibrary"]] 
cryticArgs: [
  "--hardhat-ignore-compile",
  "--solc-remaps", "@uniswap=node_modules/@uniswap @openzeppelin=node_modules/@openzeppelin @chainlink=node_modules/@chainlink @aave=node_modules/@aave @cryptoalgebra=node_modules/@cryptoalgebra hardhat=node_modules/hardhat", 
  "--compile-libraries=(LimitOrderLibrary, 0x1f),(PrimexPricingLibrary, 0x2f),(PositionLibrary, 0x3f), (TokenTransfersLibrary, 0x4f)"]